{"version":3,"sources":["styles/GlobalStyle.js","styles/PostStyled.js","webAPI.js","features/post/postSlice.js","features/user/userSlice.js","pages/LoadingPage.js","pages/HomePage.js","pages/AboutPage.js","localStorageAPI.js","pages/UserPage.js","pages/OnePostPage.js","pages/UserPostsPage.js","styles/animations.js","pages/ErrorPage.js","pages/PostPage.js","images/day_night_icon.svg","components/Nav.js","components/Footer.js","styles/theme.js","components/Blog.js","app/store.js","index.js"],"names":["GlobalStyles","css","Button","styled","button","theme","backgroundColor","textColor","hoverFilter","Wrap","div","Container","TitleH3","h3","infoColor","PostStyled","foregroundColor","boxShadow","bodyColor","titleColor","hoverColor","BASE_URL","process","getPostsAPI","page","perPageItem","a","fetch","res","json","data","headers","get","link","lastPage","slice","lastIndexOf","getPostAPI","id","getUserPostsAPI","userId","addPostAPI","token","title","body","method","JSON","stringify","updatePostAPI","postId","deletePostAPI","registerAPI","nickname","username","password","loginAPI","getMeAPI","postSlice","createSlice","name","initialState","isLoading","oenPost","editPost","pagePosts","userPosts","newPostResponse","reducers","setIsLoading","state","action","payload","setOnePost","onePost","setEditPost","setPagePosts","setUserPosts","setNewPostResponse","actions","setLastPageNumber","getPagePosts","dispatch","console","log","getUserPosts","posts","addPost","content","updatePost","deletePost","selectOnePost","selectEditPost","selectPagePosts","selectUserPosts","selectIsLoading","userSlice","user","isUserLoading","setIsUserLoading","setUser","getMe","login","register","selectUser","selectIsUserLoading","rotate","keyframes","LoadingStyled","loadingColor","LoadingPage","PostWrap","PostsStyled","PaginationButton","Post","post","currentUser","handleDelete","createdAt","isSameId","className","to","Date","toLocaleString","replace","length","onClick","Pagination","setPage","lastPageNumber","isPageInFirst","isPageInLast","HomePage","useState","useDispatch","useSelector","useEffect","window","scrollTo","top","behavior","map","PageWrap","TOKEN_NAME","REACT_APP_TOKEN_NAME","THEME_NAME","REACT_APP_THEME_NAME","setAuthToken","localStorage","setItem","getAuthToken","getItem","setTheme","LoginWrap","InputWrap","form","navBoxShadow","Input","userMethod","setUsername","setPassword","setNickname","passwordAgain","setPasswordAgain","errorMessage","setErrorMessage","history","useHistory","handleLogin","e","preventDefault","trim","loginResponse","ok","push","handleRegister","onSubmit","type","value","onChange","target","UserPage","style","marginTop","lineHeight","letterSpacing","whiteSpace","PostPage","useParams","getOnePost","userNickname","UserPostsPage","setUserNickname","Number","drift","flash","FlashMessage","ErrorPage","NewPostWrap","isEdit","setTitle","setContent","location","useLocation","pathname","handleSubmit","placeholder","rows","postMethod","editId","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgDayNightIcon","_ref","svgRef","titleId","props","enableBackground","viewBox","xmlSpace","xmlns","xmlnsXlink","ref","ForwardRef","IconWrap","NavWrap","Title","Link","Buttons","navCheckColor","NavButton","NavLogoutButton","IconButton","NavButtonWrap","activeOnlyWhenExact","match","useRouteMatch","path","exact","checked","readOnly","Nav","currentTheme","setCurrentTheme","toggleNav","useRef","current","htmlFor","FooterWrap","Footer","light","dark","Blog","basename","AboutPage","OnePostPage","store","configureStore","reducer","postReducer","userReducer","ReactDOM","render","StrictMode","styles","GlobalStyle","document","getElementById"],"mappings":"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","file":"static/js/main.4fc4c2b5.chunk.js","sourcesContent":["import { css } from '@emotion/react'\r\nimport styled from '@emotion/styled'\r\n\r\nconst GlobalStyles = css`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    font-family: '微軟正黑體','Roboto';\r\n    transition: color 2s;\r\n    transition: background-color .8s;\r\n  }\r\n\r\n  html, body, #root {\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({theme}) => theme.backgroundColor};\r\n  border: 1px solid ${({theme}) => theme.textColor};\r\n  border-radius: .2rem;\r\n  padding: 0 .5rem;\r\n  height: 2rem;\r\n  line-height: 2rem;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  &:hover{\r\n    filter: brightness(${({theme}) => theme.hoverFilter})\r\n  }\r\n`\r\n\r\nconst Wrap = styled.div`\r\n  width: clamp(35ch, 60%, 75ch);\r\n  margin: 3rem auto 0rem;\r\n  * {\r\n    color: ${({theme}) => theme.textColor}\r\n  }\r\n  p {\r\n    line-height: 1.5;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst TitleH3 = styled.h3`\r\n  font-size: 1.4rem;\r\n  display: inline-block;\r\n  margin-top: 5rem;\r\n  position: relative;\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${({theme}) => theme.infoColor};\r\n    width: 0;\r\n    height: 1px;\r\n    transition: .4s;\r\n  }\r\n  &:hover:after {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport default GlobalStyles\r\nexport { Button, Wrap, Container, TitleH3 }\r\n","import styled from '@emotion/styled'\r\n\r\nconst PostStyled = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 1.5rem;\r\n  padding: .5rem;\r\n  background: ${({theme}) => theme.foregroundColor};\r\n  border-right: 1px solid ${({theme}) => theme.infoColor};\r\n  border-bottom: 1px solid ${({theme}) => theme.infoColor};\r\n  box-shadow: ${({theme}) => theme.boxShadow};\r\n  border-radius: 0 0 .4rem 0;\r\n  display: grid;\r\n  grid-template-rows: 3rem 1rem 1rem auto;\r\n  grid-template-columns: auto 3rem 3rem;\r\n  position: relative;\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    border-bottom: 3rem solid transparent;\r\n    border-left: 5rem solid ${({theme}) => theme.bodyColor};\r\n    transition: .4s;\r\n  }\r\n  &:hover:before{\r\n    width: 5rem;\r\n    height: 0rem;\r\n    border-top: 2px solid ${({theme}) => theme.infoColor};\r\n    border-left: 2px solid ${({theme}) => theme.infoColor};\r\n  }\r\n\r\n  .title {\r\n    max-width: 100%;\r\n    display: block;\r\n    text-decoration: none;\r\n    text-shadow: 1px 1px 3px ${({ theme }) => theme.infoColor};\r\n    letter-spacing: 1px;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    font-size: 1.3rem;\r\n    color: ${({theme}) => theme.titleColor};\r\n    position: relative;\r\n    grid-row-start: 1;\r\n    grid-row-end: 2;\r\n    grid-column-start: 1;\r\n    grid-column-end: 2;\r\n    white-space: wrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    align-self: center;\r\n    justify-self: start;\r\n  }\r\n  .info {\r\n    font-size: .8rem;\r\n    color: ${({theme}) => theme.infoColor};\r\n    grid-row-start: 2;\r\n    grid-row-end: 3;\r\n    grid-column-start: 1;\r\n    grid-column-end: 4;\r\n    align-self: center;\r\n    justify-self: flex-end;\r\n  }\r\n  .author {\r\n    font-size: 1rem;\r\n    color: ${({theme}) => theme.titleColor};\r\n    grid-row-start: 3;\r\n    grid-row-end: 4;\r\n    grid-column-start: 1;\r\n    grid-column-end: 4;\r\n    align-self: center;\r\n    justify-self: flex-start;\r\n  }\r\n  .content {\r\n    grid-row-start: 4;\r\n    grid-row-end: 5;\r\n    grid-column-start: 1;\r\n    grid-column-end: 4;\r\n    overflow: hidden;\r\n    text-overflow: hidden;\r\n    letter-spacing: 2px;\r\n    line-height: 1.5;\r\n    margin: .5rem 1rem .5rem;\r\n  }\r\n  .edit, .delete {\r\n    grid-row-start: 1;\r\n    grid-row-end: 2;\r\n    grid-column-start: 2;\r\n    grid-column-end: 3;\r\n    justify-self: center;\r\n    align-self: center;\r\n    border: 1px solid ${({ theme }) => theme.infoColor};\r\n    border-radius: .4rem;\r\n    padding: .1rem .3rem;\r\n    cursor: pointer;\r\n    transition: .4s;\r\n  }\r\n  .delete {\r\n    grid-row-start: 1;\r\n    grid-row-end: 2;\r\n    grid-column-start: 3;\r\n    grid-column-end: 4;\r\n  }\r\n  .edit:hover, .delete:hover {\r\n    background-color: ${({ theme }) => theme.hoverColor};\r\n  }\r\n\r\n  .title:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: ${({theme}) => theme.infoColor};\r\n    width: 0;\r\n    height: 1px;\r\n    transition: .4s;\r\n  }\r\n  .title:hover:after {\r\n    width: 100%;\r\n  }\r\n  @media screen and (max-width: 840px) {\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    grid-template-rows: auto 1rem 1rem auto;\r\n    grid-template-columns: auto 3rem 3rem;\r\n    .info {\r\n      justify-self: flex-end;\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostStyled","const { REACT_APP_BASE_URL:BASE_URL } = process.env\r\n\r\n// post APIs ------------------------------\r\nconst getPostsAPI =  async (page, perPageItem) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/posts?_expand=user&_sort=createdAt&_order=desc&_page=${page}&_limit=${perPageItem}`)\r\n    const data = await res.json()\r\n    const link = await res.headers.get('link')\r\n    const lastPage = link.slice(link.lastIndexOf('page=') + 5,link.lastIndexOf('&'))\r\n    return { data, lastPage }\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst getPostAPI =  async (id) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/posts/${id}?_expand=user`)\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst getUserPostsAPI = async (userId) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/users/${userId}?_embed=posts&_sort=createdAt&_order=desc`)\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst addPostAPI = async (token, title, body) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      })\r\n    })\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst updatePostAPI = async (postId, token, title, body) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/posts/${postId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n      })\r\n    })\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst deletePostAPI = async (postId, token) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/posts/${postId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\n\r\n// user APIs ------------------------------\r\nconst registerAPI = async (nickname, username, password) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        nickname,\r\n        username,\r\n        password\r\n      })\r\n    })\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst loginAPI = async (username, password) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    })\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nconst getMeAPI = async (token) => {\r\n  try {\r\n    const res = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    const json = await res.json()\r\n    return json\r\n  }\r\n  catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\n\r\nexport { getPostsAPI, getPostAPI, getUserPostsAPI, addPostAPI, updatePostAPI, deletePostAPI }\r\nexport { registerAPI, loginAPI, getMeAPI }\r\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  getPostAPI,\n  getPostsAPI,\n  getUserPostsAPI,\n  addPostAPI,\n  updatePostAPI,\n  deletePostAPI } from '../../webAPI'\n\nconst initialState = {\n  isLoading: false,\n  oenPost: null,\n  editPost: null,\n  pagePosts: [],\n  userPosts: [],\n  newPostResponse: null,\n}\n\nexport const postSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action) => {\n      state.isLoading = action.payload\n    },\n    setOnePost: (state, action) => {\n      state.onePost = action.payload\n    },\n    setEditPost: (state, action) => {\n      state.editPost = action.payload\n    },\n    setPagePosts: (state, action) => {\n      state.pagePosts = action.payload\n    },\n    setUserPosts: (state, action) => {\n      state.userPosts = action.payload\n    },\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload\n    } \n  },\n})\n\nexport const {\n  setIsLoading,\n  setOnePost,\n  setEditPost,\n  setPagePosts,\n  setUserPosts,\n  setLastPageNumber,\n  setNewPostResponse } = postSlice.actions\n\n// get one post\nexport const getOnePost = id => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await getPostAPI(id)\n    dispatch(setOnePost(res))\n    dispatch(setIsLoading(false))\n  } catch(err) {\n    console.log(err)\n  }\n}\n\n// get posts by page\nexport const getPagePosts = (page, perPageItem) => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await getPostsAPI(page, perPageItem)\n    dispatch(setPagePosts(res.data))\n    dispatch(setIsLoading(false))\n    return res.lastPage\n  } catch(err) {\n    console.log(err)\n  }\n}\n\n// get posts of one user\nexport const getUserPosts = (userId) => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await getUserPostsAPI(userId)\n    dispatch(setUserPosts(res.posts))\n    dispatch(setIsLoading(false))\n    return res\n  } catch(err) {\n    console.log(err)\n  }\n}\n\n// get edit post\nexport const getEditPost = id => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await getPostAPI(id)\n    dispatch(setEditPost(res))\n    dispatch(setIsLoading(false))\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nexport const addPost = (token, title, content) => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await addPostAPI(token, title, content)\n    dispatch(setNewPostResponse(res))\n    dispatch(setIsLoading(false))\n    return res\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nexport const updatePost = (postId, token, title, content) => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await updatePostAPI(postId, token, title, content)\n    dispatch(setIsLoading(false))\n    return res\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nexport const deletePost = (postId, token) => async dispatch => {\n  dispatch(setIsLoading(true))\n  try {\n    const res = await deletePostAPI(postId, token)\n    dispatch(setIsLoading(false))\n    return res\n  } catch(err) {\n    console.log(err)\n  }\n}\n\nexport const selectOnePost = (state) => state.posts.onePost\nexport const selectEditPost = (state) => state.posts.editPost\nexport const selectPagePosts = (state) => state.posts.pagePosts\nexport const selectUserPosts = (state) => state.posts.userPosts\nexport const selectNewPostResponse = (state) => state.posts.newPostResponse\nexport const selectIsLoading = (state) => state.posts.isLoading\n\nexport default postSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { registerAPI, loginAPI, getMeAPI } from '../../webAPI'\n\nconst initialState = {\n  user: null,\n  isUserLoading: false,\n}\n\nexport const userSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    setIsUserLoading: (state, action) => {\n      state.isUserLoading = action.payload\n    },\n    setUser: (state, action) => {\n      state.user = action.payload\n    },\n  },\n})\n\nexport const { setUser, setIsUserLoading } = userSlice.actions\n\nexport const getMe = token => async dispatch => {\n  dispatch(setIsUserLoading(true))\n  try {\n    const res = await getMeAPI(token)\n    dispatch(setUser(res.data))\n    dispatch(setIsUserLoading(false))\n    return res\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const login = (username, password) => async dispatch => {\n  dispatch(setIsUserLoading(true))\n  try {\n    const res = await loginAPI(username, password)\n    dispatch(setUser(res.data))\n    dispatch(setIsUserLoading(false))\n    return res\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const register = (nickname, username, password) => async dispatch => {\n  dispatch(setIsUserLoading(true))\n  try {\n    const res = await registerAPI(nickname, username, password)\n    dispatch(setUser(res.data))\n    dispatch(setIsUserLoading(false))\n    return res\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const selectUser = (state) => state.user.user\nexport const selectIsUserLoading = (state) => state.user.isUserLoading\n\nexport default userSlice.reducer\n","import styled from '@emotion/styled'\r\nimport { keyframes } from '@emotion/react'\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`\r\n\r\nconst LoadingStyled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  font-size: 2rem;\r\n  z-index: 5;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: ${({theme}) => theme.bodyColor};\r\n  background: ${({theme}) => theme.loadingColor};\r\n  backdrop-filter: blur(2px);\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    top: 60%;\r\n    transform: translate(-50%, -50%);\r\n    background: transparent;\r\n    width: 27px;\r\n    height: 27px;\r\n    border-radius: 50%;\r\n    border: 5px dashed ${({theme}) => theme.bodyColor};\r\n    animation: ${rotate} 1s linear infinite;\r\n  }\r\n`\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <LoadingStyled>\r\n      Loading...\r\n    </LoadingStyled>\r\n  )\r\n}\r\n\r\nexport default LoadingPage","import React, { useState, useEffect }from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport PostStyled from '../styles/PostStyled.js'\r\nimport { Button, Wrap, Container } from '../styles/GlobalStyle'\r\nimport { selectPagePosts, selectIsLoading, getPagePosts, deletePost } from '../features/post/postSlice'\r\nimport { selectUser } from '../features/user/userSlice'\r\nimport LoadingPage from '../pages/LoadingPage'\r\n\r\nconst PostWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst PostsStyled = styled(PostStyled)`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: auto 1rem 1rem auto;\r\n  .title {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .content:first-letter {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-right: .5rem;\r\n    float: left;\r\n  }\r\n`\r\n\r\nconst PaginationButton = styled(Button)`\r\n  margin: .5rem;\r\n`\r\n\r\nconst Post = ({post, currentUser, handleDelete}) => {\r\n  const { id, title, createdAt, body, user } = post\r\n  const isSameId = currentUser && currentUser.id === user.id\r\n  return (\r\n    <PostsStyled>\r\n      <Link className=\"title\" to={`/post/${id}`} >{title}</Link>\r\n      <p className=\"info\">{new Date(createdAt).toLocaleString().replace(',','')}</p>\r\n      <Link className=\"author\" to={`/user/${user.id}`} > - {user.nickname}</Link>\r\n      <p className=\"content\">{body.length > 60 ? `${body.slice(0,60)}...` : body}</p>\r\n      {isSameId && <div className=\"delete\" onClick={() => handleDelete(id)}>刪除</div>}\r\n      {isSameId && <Link to={`/edit-post/${id}`} className=\"edit\">編輯</Link>}\r\n    </PostsStyled>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object\r\n}\r\n\r\nconst Pagination = ({ page, setPage, lastPageNumber }) => {\r\n  const isPageInFirst = page !== 1\r\n  const isPageInLast = page !== lastPageNumber\r\n\r\n  const handleNext = () => {\r\n    if (page >= lastPageNumber) return\r\n    setPage(() => page + 1)\r\n  }\r\n\r\n  const handlePrev = () => {\r\n    if (page <= 1) return\r\n    setPage(() => page - 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {isPageInFirst && (\r\n          <PaginationButton onClick={() => setPage(1)}>首頁</PaginationButton>\r\n        )}\r\n        {isPageInFirst && (\r\n          <PaginationButton onClick={handlePrev}>上一頁</PaginationButton>\r\n        )}\r\n        {isPageInLast && (\r\n          <PaginationButton onClick={handleNext}>下一頁</PaginationButton>\r\n        )}\r\n        {isPageInLast && (\r\n          <PaginationButton onClick={() => setPage(lastPageNumber)}>\r\n            最後一頁\r\n          </PaginationButton>\r\n        )}\r\n      </Container>\r\n      <Container>\r\n        <div>\r\n          頁數：{page} / {lastPageNumber}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst HomePage = () => {\r\n  const [page, setPage] = useState(1)\r\n  const [lastPageNumber, setLastPageNumber] = useState(0)\r\n  const dispatch = useDispatch()\r\n  const posts = useSelector(selectPagePosts)\r\n  const isLoading = useSelector(selectIsLoading)\r\n  const currentUser = useSelector(selectUser)\r\n  const { REACT_APP_PER_PAGE_ITEM:perPageItem } = process.env\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await dispatch(getPagePosts(page, perPageItem))\r\n      setLastPageNumber(res)\r\n      window.scrollTo({\r\n        top: 0,\r\n        behavior: 'smooth'\r\n      })\r\n    })()\r\n  },[dispatch, page, perPageItem, ])\r\n\r\n  const handleDelete = async (id) => {\r\n    await dispatch(deletePost(id))\r\n    const res = await dispatch(getPagePosts(page, perPageItem))\r\n    setLastPageNumber(res)\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrap>\r\n        <PostWrap>\r\n          {isLoading && <LoadingPage />}\r\n          {posts && posts.map((post) =>\r\n            <Post key={post.id} post={post} currentUser={currentUser} handleDelete={handleDelete} /> \r\n          )}\r\n          <Pagination page={page} setPage={setPage} lastPageNumber={lastPageNumber}/>\r\n        </PostWrap>\r\n      </Wrap>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Wrap, TitleH3 } from '../styles/GlobalStyle'\r\n\r\nconst PageWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n`\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Wrap>\r\n      <PageWrap>\r\n        <TitleH3>關於我：</TitleH3>\r\n        <p>嗨嗨！我是 Benben &#128075; </p>\r\n        <p>這是一個黑白為主色的部落格，並可以切換黑白主題。</p>\r\n        <p>我在這裡錄記人生黑白無常的那些時刻...</p>\r\n        <Container>\r\n          <TitleH3>你知道嗎</TitleH3>\r\n          <p>RGB一般稱為【色光三原色】</p>\r\n          <p>R（red）紅、G（green）綠、B（blue）藍，顏色階調為 0-255</p>\r\n          <p>如果把三個色階加來除以 3 並把 RGB 指定成同樣的數字就可以把顏色變黑白</p>\r\n          </Container>\r\n      </PageWrap>\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","const { REACT_APP_TOKEN_NAME:TOKEN_NAME, REACT_APP_THEME_NAME:THEME_NAME } = process.env\r\n\r\n// token & theme storage ------------------------\r\nconst setAuthToken = (token) => {\r\n  localStorage.setItem(TOKEN_NAME, token)\r\n}\r\n\r\nconst getAuthToken = () => {\r\n  return localStorage.getItem(TOKEN_NAME) || ''\r\n}\r\n\r\nconst setTheme = (theme) => {\r\n  localStorage.setItem(THEME_NAME, theme)\r\n}\r\n\r\nconst getTheme = () => {\r\n  return localStorage.getItem(THEME_NAME) || 'light'\r\n}\r\n\r\nexport { setAuthToken, getAuthToken, setTheme, getTheme }","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from '@emotion/styled'\r\n\r\nimport LoadingPage from '../pages/LoadingPage'\r\nimport { setAuthToken, getAuthToken } from '../localStorageAPI'\r\nimport { Wrap, Button, Container } from '../styles/GlobalStyle'\r\nimport { getMe, login, register, selectIsUserLoading } from '../features/user/userSlice'\r\n\r\nconst LoginWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst InputWrap = styled.form`\r\n  width: clamp(25ch, 40%, 35ch);\r\n  padding: 1rem;\r\n  box-shadow: ${({theme}) => theme.navBoxShadow};\r\n  border: 1px solid ${({theme}) => theme.infoColor};\r\n  border-radius: .4rem;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .button {\r\n    align-self: center;\r\n    justify-content: center;\r\n    margin: 2rem 0 1rem;\r\n    width: clamp(3rem, 30%, 6rem);\r\n  }\r\n  .title {\r\n    align-self: flex-start;\r\n    margin: 1rem 0;\r\n    font-size: 1.2rem;\r\n  }\r\n  input[type=text], input[type=password] {\r\n    width: 100%;\r\n    background: ${({theme}) => theme.foregroundColor};\r\n    border: none;\r\n    border-bottom: 1px solid ${({theme}) => theme.titleColor};\r\n    border-radius: .3rem;\r\n    padding-left: .5rem;\r\n    height: 1.5rem;\r\n    line-height: 1.2;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst Input  = ({ userMethod }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [passwordAgain, setPasswordAgain] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const isUserLoading = useSelector(selectIsUserLoading)\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage('')\r\n    if (!username || !password) {\r\n      return setErrorMessage('請輸入帳號或密碼')\r\n    }\r\n    if (!username.trim().length\r\n      || !password.trim().length\r\n    ) return setErrorMessage('帳號或密碼不得為空白')\r\n\r\n    const loginResponse = await dispatch(login(username, password))\r\n    if (!loginResponse.ok) return setErrorMessage('帳號或密碼錯誤')\r\n    setAuthToken(loginResponse.token)\r\n\r\n    const getMeResponse = await dispatch(getMe(getAuthToken()))\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      return setErrorMessage('帳號或密碼錯誤')\r\n    }\r\n    history.push(\"/\")\r\n  }\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage('')\r\n    if (!nickname || !username || !password || !passwordAgain) {\r\n      return setErrorMessage('請輸入暱帳號、密碼或再次確認密碼')\r\n    }\r\n    if (!nickname.trim().length\r\n      || !username.trim().length\r\n      || !password.trim().length\r\n      || !passwordAgain.trim().length\r\n    ) return setErrorMessage('暱帳號、密碼或再次確認密碼 不得為空白')\r\n\r\n    const loginResponse = await dispatch(register(nickname, username, password))\r\n    if (!loginResponse.ok) return setErrorMessage('註冊失敗')\r\n    setAuthToken(loginResponse.token)\r\n\r\n    const getMeResponse = await dispatch(getMe(getAuthToken()))\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      return setErrorMessage('帳號或密碼錯誤')\r\n    }\r\n    history.push(\"/\")\r\n  }\r\n\r\n  return (\r\n    <InputWrap onSubmit={\r\n      userMethod === \"login\"\r\n      ? handleLogin\r\n      : handleRegister\r\n    }>\r\n      <h1>{userMethod}</h1>\r\n      {errorMessage && <div>{errorMessage}！</div>}\r\n      {isUserLoading && <LoadingPage />}\r\n      {userMethod === \"register\" && (\r\n        <>\r\n          <div className=\"title\">暱稱：</div>\r\n          <input type=\"text\" value={nickname} onChange={e => setNickname(e.target.value)} />\r\n        </>\r\n      )}\r\n\r\n      <div className=\"title\">帳號：</div>\r\n      <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\r\n      <div className=\"title\">密碼：</div>\r\n      <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\r\n\r\n      {userMethod === \"register\" && (\r\n        <>\r\n          <div className=\"title\">再次確認密碼：</div>\r\n          <input type=\"password\" value={passwordAgain} onChange={e => setPasswordAgain(e.target.value)} />\r\n        </>\r\n      )}\r\n      <Button className=\"button\">{userMethod}</Button>\r\n    </InputWrap>\r\n  )\r\n}\r\n\r\nconst UserPage = ({ userMethod }) => {\r\n  return (\r\n    <Wrap>\r\n      <Container>\r\n        <LoginWrap>\r\n          <Input userMethod={userMethod}/>\r\n        </LoginWrap>\r\n      </Container>\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nexport default UserPage;\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport PostStyled from '../styles/PostStyled.js'\r\nimport { Wrap } from '../styles/GlobalStyle'\r\nimport { selectIsLoading, selectOnePost, getOnePost } from '../features/post/postSlice'\r\nimport LoadingPage from './LoadingPage'\r\n\r\nconst PostWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst Post = ({post}) => {\r\n  const { id, title, createdAt, body, user } = post\r\n  return (\r\n    <PostStyled>\r\n      <Link className=\"title\" to={`/post/${id}`} >{title}</Link>\r\n      <p className=\"info\">{new Date(createdAt).toLocaleString().replace(',','')}</p>\r\n      <Link className=\"author\" to={`/user/${user.id}`} > - {user.nickname}</Link>\r\n      <p className=\"content\" style={{\r\n        marginTop: '1rem',\r\n        lineHeight: 2,\r\n        letterSpacing: '3px',\r\n        whiteSpace: 'pre-wrap',\r\n      }}>{body}</p>\r\n    </PostStyled>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object\r\n}\r\n\r\nconst PostPage = () => {\r\n  const dispatch = useDispatch()\r\n  let { id } = useParams()\r\n  const post = useSelector(selectOnePost)\r\n  const isLoading = useSelector(selectIsLoading)\r\n\r\n  useEffect(() => {\r\n    dispatch(getOnePost(id))\r\n  },[id, dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Wrap>\r\n        <PostWrap>\r\n          {isLoading && <LoadingPage />}\r\n          {post && <Post post={post} />} \r\n        </PostWrap>\r\n      </Wrap>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostPage;\r\n","import React, { useEffect, useState }from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport styled from '@emotion/styled'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport PostStyled from '../styles/PostStyled.js'\r\nimport { Wrap } from '../styles/GlobalStyle'\r\nimport { selectUserPosts, selectIsLoading, getUserPosts, deletePost } from '../features/post/postSlice'\r\nimport { selectUser } from '../features/user/userSlice'\r\nimport LoadingPage from './LoadingPage'\r\n\r\nconst PostWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst PostsStyled = styled(PostStyled)`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-rows: auto 1rem 1rem auto;\r\n  .title {\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  .content:first-letter {\r\n    font-size: 1.2rem;\r\n    font-weight: 600;\r\n    margin-right: .5rem;\r\n    float: left;\r\n  }\r\n`\r\n\r\nconst Post = ({post, userNickname, handleDelete, isSameId}) => {\r\n  const { id, title, createdAt, body, userId } = post\r\n  return (\r\n    <PostsStyled>\r\n      <Link className=\"title\" to={`/post/${id}`} >{title}</Link>\r\n      <p className=\"info\">{new Date(createdAt).toLocaleString().replace(',','')}</p>\r\n      <Link className=\"author\" to={`/user/${userId}`} > - {userNickname}</Link>\r\n      <p className=\"content\">{body.length > 60 ? `${body.slice(0,60)}...` : body}</p>\r\n      {isSameId && <div className=\"delete\" onClick={() => handleDelete(id)}>刪除</div>}\r\n      {isSameId && <Link to={`/edit-post/${id}`} className=\"edit\">編輯</Link>}\r\n    </PostsStyled>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object\r\n}\r\n\r\nconst UserPostsPage = () => {\r\n  const [ userNickname ,setUserNickname ] = useState('')\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(selectUser)\r\n  const userPosts = useSelector(selectUserPosts)\r\n  const isLoading = useSelector(selectIsLoading)\r\n  let { userId } = useParams()\r\n  const isSameId = Number(userId) === user.id\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await dispatch(getUserPosts(userId))\r\n      setUserNickname(res.nickname)\r\n    })()\r\n  },[dispatch, userId])\r\n\r\n  const handleDelete = async (id) => {\r\n    await dispatch(deletePost(id))\r\n    const res = await dispatch(getUserPosts(userId))\r\n    setUserNickname(res.nickname)\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrap>\r\n        <PostWrap>\r\n          {isLoading && <LoadingPage />}\r\n          {userPosts && userPosts.map((post) => \r\n            <Post key={post.id} post={post} userNickname={userNickname} handleDelete={handleDelete} isSameId={isSameId} />\r\n          )}\r\n        </PostWrap>\r\n      </Wrap>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserPostsPage;\r\n","import { keyframes } from '@emotion/react'\r\n\r\nconst drift = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(-100px);\r\n  }\r\n  10% {\r\n    opacity: 1;\r\n    transform: translateX(-80px);\r\n  }\r\n  90% {\r\n    opacity: 1;\r\n    transform: translateX(80px);\r\n  }\r\n  100% {\r\n    opacity: 0;\r\n    transform: translateX(100px);\r\n  }\r\n`\r\n\r\nconst flash = keyframes`\r\n  from { opacity: 1}\r\n  to { opacity: 0}\r\n`\r\n\r\nexport { flash, drift }","import React from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { Wrap, TitleH3 } from '../styles/GlobalStyle'\r\n\r\nimport { flash } from '../styles/animations.js'\r\n\r\nconst PageWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst FlashMessage = styled(TitleH3)`\r\n  font-size: 2rem;\r\n  animation: ${flash} 1.2s ease-in alternate infinite;\r\n`\r\n\r\nconst ErrorPage = ({ title }) => {\r\n  return (\r\n    <Wrap>\r\n      <PageWrap>\r\n        <h1>Oops!</h1>\r\n        <FlashMessage>{title}</FlashMessage>\r\n      </PageWrap>\r\n    </Wrap>\r\n  )\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\r\nimport styled from '@emotion/styled'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport ErrorPage from './ErrorPage.js'\r\nimport LoadingPage from './LoadingPage.js'\r\nimport { Wrap, Button } from '../styles/GlobalStyle'\r\nimport { getEditPost, addPost, updatePost, selectEditPost, selectIsLoading } from '../features/post/postSlice'\r\nimport { selectUser } from '../features/user/userSlice'\r\nimport { getAuthToken } from '../localStorageAPI.js'\r\n\r\nconst NewPostWrap = styled(Wrap)`\r\n  width: 100%;\r\n  padding: 2rem 0;\r\n`\r\n\r\nconst InputWrap = styled.form`\r\n  width: clamp(25ch, 70%, 70ch);\r\n  padding: 1rem;\r\n  margin: 3rem auto 2rem;\r\n  box-shadow: ${({theme}) => theme.navBoxShadow};\r\n  border: 1px solid ${({theme}) => theme.infoColor};\r\n  border-radius: .4rem;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .button {\r\n    align-self: center;\r\n    justify-content: center;\r\n    margin: 2rem 0 1rem;\r\n    width: clamp(3rem, 30%, 6rem);\r\n  }\r\n  .title {\r\n    align-self: flex-start;\r\n    margin: 1rem 0;\r\n    font-size: 1.2rem;\r\n  }\r\n  input[type=text], textarea {\r\n    width: 100%;\r\n    font-size: 1.2rem;\r\n    background: ${({theme}) => theme.foregroundColor};\r\n    border: none;\r\n    border-bottom: 1px solid ${({theme}) => theme.titleColor};\r\n    border-radius: .3rem;\r\n    padding-left: .5rem;\r\n    height: 1.8rem;\r\n    line-height: 1.2;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n  textarea {\r\n    padding-top: .5rem;\r\n    height: auto;\r\n    resize: vertical;\r\n  }\r\n  span {\r\n    max-width: 100%;\r\n    align-self: flex-end;\r\n    white-space: wrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n`\r\n\r\nconst Input  = ({ user, isEdit, editPost }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const dispatch = useDispatch()\r\n  const token = getAuthToken()\r\n\r\n  useEffect(() => {\r\n    if (editPost) {\r\n      setTitle(editPost.title)\r\n      setContent(editPost.body)\r\n    }\r\n    if (location.pathname === '/new-post') {\r\n      setTitle('')\r\n      setContent('')\r\n    }\r\n  },[editPost, location.pathname])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setErrorMessage('')\r\n    if (!title || !content) {\r\n      return setErrorMessage('請輸入標題或內容')\r\n    }\r\n    if (!title.trim().length\r\n      || !content.trim().length\r\n    ) return setErrorMessage('標題或內容不得為空白')\r\n\r\n    let res = null\r\n    if (isEdit) {\r\n      res = await dispatch(updatePost(editPost.id, token, title, content))\r\n    } else {\r\n      res = await dispatch(addPost(token, title, content ))\r\n    }\r\n    if (!res) {\r\n      return setErrorMessage('操作失敗')\r\n    }\r\n    if (res && res.id ) history.push(\"/post/\" + res.id)\r\n  }\r\n\r\n  return (\r\n    <InputWrap onSubmit={handleSubmit}>\r\n      <h1>{isEdit ? '更新' : '發布'}文章</h1><span> - {user.nickname}</span>\r\n      {errorMessage && <div>{errorMessage}！</div>}\r\n      <div className=\"title\">標題：</div>\r\n      <input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} placeholder=\"請輸入標題...\"/>\r\n      <div className=\"title\">內容：</div>\r\n      <textarea onChange={e => setContent(e.target.value)} rows=\"6\" placeholder=\"請輸入內容...\" value={content} />\r\n      <Button className=\"button\">{isEdit ? '更新' : '送出'}</Button>\r\n    </InputWrap>\r\n  )\r\n}\r\n\r\nconst PostPage = ({ postMethod }) => {\r\n  const isEdit = postMethod === 'edit'\r\n  const { editId } = useParams()\r\n  const user = useSelector(selectUser)\r\n  const isLoading = useSelector(selectIsLoading)\r\n  const editPost = useSelector(selectEditPost)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getEditPost(editId))\r\n  },[editId, dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Wrap>\r\n        <NewPostWrap>\r\n          {isLoading && <LoadingPage />}\r\n          {user && <Input user={user} isEdit={isEdit} editPost={editPost} />}\r\n          {!user && <ErrorPage title=\"Login first...\" /> }\r\n        </NewPostWrap>\r\n      </Wrap>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostPage;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.2,9.6c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3c0.4-0.4,0.4-1,0-1.4L7.5,6.1c-0.4-0.4-1-0.4-1.4,0s-0.4,1,0,1.4L8.2,9.6   z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7,16c0-0.6-0.4-1-1-1H3c-0.6,0-1,0.4-1,1s0.4,1,1,1h3C6.6,17,7,16.6,7,16z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.2,22.4l-2.1,2.1c-0.4,0.4-0.4,1,0,1.4c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l2.1-2.1c0.4-0.4,0.4-1,0-1.4   S8.6,22,8.2,22.4z\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29.4,16.2c-0.4-0.2-0.9-0.1-1.2,0.3c-0.8,1-2,1.5-3.2,1.5c-2.3,0-4.3-1.9-4.3-4.3c0-1.6,0.9-3,2.3-3.8  c0.4-0.2,0.6-0.7,0.5-1.1C23.4,8.4,23,8,22.5,8c-0.1,0-0.3,0-0.4,0c-1.9,0-3.7,0.7-5.1,1.8V3c0-0.6-0.4-1-1-1s-1,0.4-1,1v5.1  c-3.9,0.5-7,3.9-7,7.9s3.1,7.4,7,7.9V29c0,0.6,0.4,1,1,1s1-0.4,1-1v-6.8c1.4,1.2,3.2,1.8,5.1,1.8c4,0,7.3-2.9,7.9-6.8  C30.1,16.8,29.8,16.3,29.4,16.2z M17,20c0,0.6-0.4,1-1,1s-1-0.4-1-1v-8c0-0.6,0.4-1,1-1s1,0.4,1,1V20z\"\n});\n\nfunction SvgDayNightIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Icons\",\n    style: {\n      enableBackground: \"new 0 0 32 32\"\n    },\n    viewBox: \"0 0 32 32\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDayNightIcon);\nexport default __webpack_public_path__ + \"static/media/day_night_icon.143e286b.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useRef } from 'react'\r\nimport { Link, useRouteMatch, useHistory, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport styled from '@emotion/styled'\r\n\r\n// import { AuthContext } from '../contexts'\r\nimport { setAuthToken, setTheme } from '../localStorageAPI.js'\r\nimport { ReactComponent as DayNightIcon } from '../images/day_night_icon.svg'\r\nimport { drift, flash } from '../styles/animations.js'\r\nimport { selectUser, getMe, setUser } from '../features/user/userSlice'\r\nimport { getAuthToken } from '../localStorageAPI'\r\n\r\n// styled ----------------------\r\nconst IconWrap = styled.div`\r\n  width: 1.5rem;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  > svg {\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    path {\r\n      fill: ${({theme}) => theme.titleColor};\r\n    }\r\n  }\r\n`\r\n\r\nconst NavWrap = styled.div`\r\n  width: 100%;\r\n  height: 3rem;\r\n  box-shadow: ${({theme}) => theme.navBoxShadow};\r\n  background-color: ${({theme}) => theme.backgroundColor};\r\n  color: ${({theme}) => theme.titleColor};\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  box-sizing: border-box;\r\n  z-index: 3;\r\n\r\n  #menu__btn, #menu__control {\r\n    display: none;\r\n  }\r\n  #menu__btn > span {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 840px) {\r\n    #menu__btn {\r\n      display: inline-block;\r\n      width: 1.5rem;\r\n      height: 1.5rem;\r\n      border: 1px solid ${({theme}) => theme.titleColor};\r\n      border-radius: .3rem;\r\n      position: relative;\r\n      cursor: pointer;\r\n      margin-right: 1rem;\r\n    }\r\n    #menu__btn::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 51%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      height: .1rem;\r\n      width: .9rem;\r\n      background-color: ${({theme}) => theme.textColor};\r\n      border-radius: .1rem;\r\n      box-shadow: 0 .3rem 0px ${({theme}) => theme.textColor}, 0 -.3rem 0px ${({theme}) => theme.textColor};\r\n    }\r\n    #menu__btn:hover {\r\n      filter: brightness(0.6);\r\n    }\r\n    #menu__control:checked+div {\r\n      height: auto;\r\n      max-height: 100vh;\r\n    }\r\n  }\r\n\r\n`\r\n\r\nconst Title = styled(Link)`\r\n  text-decoration: none;\r\n  color: ${({theme}) => theme.titleColor};\r\n  text-shadow: 1px 1px 3px ${({ theme }) => theme.infoColor};\r\n  font-size: 1.4rem;\r\n  position: relative;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  &:hover {\r\n    animation: ${flash} 1s ease-in alternate infinite;\r\n  }\r\n  span {\r\n    width: 3rem;\r\n    height: 1px;\r\n    position: absolute;\r\n    background: linear-gradient( 90deg, transparent, \r\n      ${({theme}) => theme.titleColor});\r\n    transform: translateX(-50%);\r\n    animation: ${drift} 2s linear infinite;\r\n    z-index: 1;\r\n  }\r\n  &:hover span {\r\n    width: 5rem;\r\n    animation: ${drift} 1s linear infinite;\r\n  }\r\n  span:nth-of-type(1) {\r\n    top: 45%;\r\n    left: 50%;\r\n  }\r\n  span:nth-of-type(2) {\r\n    top: 55%;\r\n    left: 50%;\r\n    animation-delay: .25s;\r\n  }\r\n  span:nth-of-type(3) {\r\n    top: 65%;\r\n    left: 50%;\r\n    animation-delay: .5s;\r\n  }\r\n  span:nth-of-type(4) {\r\n    top: 75%;\r\n    left: 50%;\r\n    animation-delay: .75s;\r\n  }\r\n`\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  input[name=nav] {\r\n    display: none;\r\n    z-index: -1;\r\n  }\r\n  input[name=nav]:checked + label > a {\r\n    background: ${({theme}) => theme.navCheckColor};\r\n    color: ${({theme}) => theme.bodyColor};\r\n  }\r\n  @media screen and (max-width: 840px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 0;\r\n    max-height: 0;\r\n    overflow:hidden;\r\n    position: absolute;\r\n    top: 3rem;\r\n    transition: max-height .8s ease;\r\n    margin: 0;\r\n    padding: 0;\r\n    z-index: -1;\r\n  }\r\n`\r\n\r\nconst NavButton = styled(Link)`\r\n  display: block;\r\n  border: none;\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  line-height: 3rem;\r\n  padding: 0 1rem;\r\n  margin: 0;\r\n  overflow: hidden;\r\n  color: ${({theme}) => theme.titleColor};\r\n  background-color: ${({theme}) => theme.backgroundColor};\r\n  &:hover {\r\n    filter:brightness(${({theme}) => theme.hoverFilter});\r\n  }\r\n  @media screen and (max-width: 840px) {\r\n    backdrop-filter: blur(2px);\r\n    width: 100vw;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst NavLogoutButton = styled.div`\r\n  display: block;\r\n  border: none;\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  line-height: 3rem;\r\n  padding: 0 1rem;\r\n  margin: 0;\r\n  overflow: hidden;\r\n  color: ${({theme}) => theme.titleColor};\r\n  background-color: ${({theme}) => theme.backgroundColor};\r\n  &:hover {\r\n    filter:brightness(${({theme}) => theme.hoverFilter});\r\n  }\r\n  @media screen and (max-width: 840px) {\r\n    backdrop-filter: blur(2px);\r\n    width: 100vw;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst IconButton = styled.div`\r\n  display: block;\r\n  border: none;\r\n  border-radius: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  line-height: 3rem;\r\n  padding-right: 1rem;\r\n  margin: 0;\r\n  color: ${({theme}) => theme.titleColor};\r\n  background-color: ${({theme}) => theme.backgroundColor};\r\n  z-index: 3;\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 0;\r\n  transform: translate(-50%, -50%);\r\n  @media screen and (max-width: 840px) {\r\n    padding-right: .5rem;\r\n  }\r\n\r\n`\r\n\r\nconst NavButtonWrap = ({ title, to, activeOnlyWhenExact }) => {\r\n  let match = useRouteMatch({\r\n    path: to,\r\n    exact: activeOnlyWhenExact\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      {match ? (\r\n        <input type=\"radio\" name=\"nav\" checked readOnly={true} />\r\n      ) : (\r\n        <input type=\"radio\" name=\"nav\" />\r\n      )}\r\n      <label>\r\n        <NavButton to={to}>{title}</NavButton>\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\n// component --------------------------\r\nconst Nav = ({currentTheme, setCurrentTheme}) => {\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const toggleNav = useRef(null)\r\n  const user = useSelector(selectUser)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    (async() => {\r\n      if (!getAuthToken()) return\r\n      await dispatch(getMe(getAuthToken()))\r\n    })()\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    toggleNav.current.checked = false\r\n  },[location])\r\n  \r\n  const handleTheme = () => {\r\n    if (currentTheme === 'light') {\r\n      setCurrentTheme('dark')\r\n      setTheme('dark')\r\n    } else {\r\n      setCurrentTheme('light')\r\n      setTheme('light')\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken('')\r\n    dispatch(setUser(null))\r\n    if (location.pathname !== \"/\") {\r\n      history.push(\"/\")\r\n    }\r\n  }\r\n\r\n  return (\r\n      <NavWrap>\r\n        <Title to=\"/\">\r\n          benben's blog\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </Title>\r\n\r\n        <label htmlFor=\"menu__control\" id=\"menu__btn\">\r\n          <span>menu</span>\r\n        </label>\r\n        <input id=\"menu__control\" type=\"checkbox\" ref={toggleNav}/>\r\n        <Buttons>\r\n\r\n          <NavButtonWrap to=\"/about\" title=\"About\" activeOnlyWhenExact={true} />\r\n          {user\r\n            ? ( <NavButtonWrap to=\"/new-post\" title=\"New Post\" activeOnlyWhenExact={true}/> )\r\n            : ( <NavButtonWrap to=\"/login\" title=\"Login\" activeOnlyWhenExact={true}/> )\r\n          }\r\n          {user\r\n            ? ( <NavLogoutButton onClick={handleLogout}>logout</NavLogoutButton> )\r\n            : ( <NavButtonWrap to=\"/register\" title=\"Register\" activeOnlyWhenExact={true}/> )\r\n          }\r\n\r\n        </Buttons>\r\n        <IconButton onClick={handleTheme}>\r\n        <IconWrap><DayNightIcon /></IconWrap>\r\n        </IconButton>\r\n      </NavWrap>\r\n  )\r\n}\r\n\r\nexport default Nav","import styled from '@emotion/styled'\r\n\r\nconst FooterWrap = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  text-align: center;\r\n  height: 1.6rem;\r\n  line-height: 1.6rem;\r\n  padding: auto;\r\n  bottom: 0;\r\n  background-color: ${({theme}) => theme.backgroundColor};\r\n  color: ${({theme}) => theme.textColor};\r\n`\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterWrap>\r\n      Copyright &copy; 2021 Benben All rights reserved.\r\n    </FooterWrap>\r\n  )\r\n}\r\n\r\nexport default Footer","const theme ={\r\n  light: {\r\n    bodyColor: '#fff',\r\n    backgroundColor: '#eee',\r\n    foregroundColor: '#f3f3f3',\r\n    boxShadow: '1px 1px 0px 1px #999',\r\n    navCheckColor: '#555',\r\n    navBoxShadow: \r\n      '0px 1px 3px 1px rgba(0, 0, 0, 0.2), 0px 1px 5px 1px rgba(0, 0, 0, 0.1)',\r\n    titleColor: '#222',\r\n    infoColor: '#777',\r\n    textColor: '#555',\r\n    loadingColor: 'rgba(0,0,0,0.6)',\r\n    hoverFilter: 0.9,\r\n    hoverColor: '#aaa',\r\n  },\r\n\r\n  dark: {\r\n    bodyColor: '#222',\r\n    backgroundColor: '#333',\r\n    foregroundColor: '#2f2f2f',\r\n    boxShadow: '1px 1px 0px 1px rgba(255, 255, 255, 0.2)',\r\n    navBoxShadow: \r\n      '0px 1px 3px 1px rgba(255, 255, 255, 0.2), 0px 1px 5px 1px rgba(255, 255, 255, 0.1)',\r\n    navCheckColor: '#aaa',\r\n    titleColor: '#eee',\r\n    infoColor: '#ccc',\r\n    textColor: '#ccc',\r\n    loadingColor: 'rgba(255,255,255,0.4)',\r\n    hoverFilter: 1.2,\r\n    hoverColor: '#666',\r\n  }\r\n}\r\n\r\nexport default theme","import React, { useState } from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { ThemeProvider } from '@emotion/react'\nimport styled from '@emotion/styled'\n\nimport HomePage from '../pages/HomePage.js'\nimport AboutPage from '../pages/AboutPage.js'\nimport UserPage from '../pages/UserPage.js'\nimport OnePostPage from '../pages/OnePostPage.js'\nimport UserPostsPage from '../pages/UserPostsPage.js'\nimport PostPage from '../pages/PostPage.js'\nimport ErrorPage from '../pages/ErrorPage.js'\n\nimport Nav from './Nav'\nimport Footer from './Footer'\nimport theme from '../styles/theme'\nimport { getTheme } from '../localStorageAPI.js'\n\nconst Container = styled.div`\n  background-color: ${({theme}) => theme.bodyColor};\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4.6rem);\n`\n\nfunction Blog() {\n  const [currentTheme, setCurrentTheme] = useState(getTheme())\n  return (\n    <ThemeProvider theme={theme[currentTheme]}>\n\n      <Router basename=\"/blog\">\n        <Nav currentTheme={currentTheme} setCurrentTheme={setCurrentTheme} />\n        <Container>\n          <Switch>\n\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route exact path=\"/login\">\n              <UserPage userMethod=\"login\"/>\n            </Route>\n            <Route exact path=\"/register\">\n              <UserPage userMethod=\"register\"/>\n            </Route>\n            <Route exact path=\"/new-post\">\n              <PostPage postMethod=\"add\"/>\n            </Route>\n            <Route exact path=\"/edit-post/:editId\">\n              <PostPage postMethod=\"edit\"/>\n            </Route>\n\n            <Route exact path=\"/post/:id\">\n              <OnePostPage />\n            </Route>\n            <Route exact path=\"/user/:userId\">\n              <UserPostsPage />\n            </Route>\n\n            <Route exact path=\"*\">\n              <ErrorPage title=\"404 not found...\"/>\n            </Route>\n\n          </Switch>\n        </Container>\n        <Footer />\n      </Router>\n\n    </ThemeProvider>\n  );\n}\n\nexport default Blog;\n","import { configureStore } from '@reduxjs/toolkit'\nimport postReducer from '../features/post/postSlice'\nimport userReducer from '../features/user/userSlice'\n\nexport const store = configureStore({\n  reducer: {\n    posts: postReducer,\n    user: userReducer\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Global, css } from '@emotion/react'\nimport { Provider } from 'react-redux'\n\nimport GlobalStyle from './styles/GlobalStyle'\nimport Blog from './components/Blog.js';\nimport { store } from './app/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Global styles={css`${GlobalStyle}`} />\n      <Blog />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}